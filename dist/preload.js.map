{"version":3,"file":"preload.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,W,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,MCtBA,eAIA,EAAAQ,cAAcC,kBAAkB,cAAe,CAC7CC,iBAAkB,IAAM,EAAAC,YAAYC,OAAO,qBAC3CC,aAAc,IAAM,EAAAF,YAAYC,OAAO,kBACvCE,gBAAkBC,GAKZ,EAAAJ,YAAYC,OAAO,mBAAoBG,I","sources":["webpack://bfg-repo-cleaner-gui/external node-commonjs \"electron\"","webpack://bfg-repo-cleaner-gui/webpack/bootstrap","webpack://bfg-repo-cleaner-gui/./src/main/preload.ts"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { contextBridge, ipcRenderer } from 'electron';\n\n// Expose protected methods that allow the renderer process to use\n// the ipcRenderer without exposing the entire object\ncontextBridge.exposeInMainWorld('electronAPI', {\n  selectRepository: () => ipcRenderer.invoke('select-repository'),\n  selectBfgJar: () => ipcRenderer.invoke('select-bfg-jar'),\n  cleanRepository: (options: {\n    repoPath: string;\n    bfgPath: string;\n    textReplacements: string[];\n    fileSizes: string;\n  }) => ipcRenderer.invoke('clean-repository', options)\n});\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","contextBridge","exposeInMainWorld","selectRepository","ipcRenderer","invoke","selectBfgJar","cleanRepository","options"],"sourceRoot":""}