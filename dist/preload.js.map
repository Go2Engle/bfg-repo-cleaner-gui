{"version":3,"file":"preload.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;ACtBA,mEAAsD;AAEtD,kEAAkE;AAClE,qDAAqD;AACrD,wBAAa,CAAC,iBAAiB,CAAC,aAAa,EAAE;IAC7C,gBAAgB,EAAE,GAAG,EAAE,CAAC,sBAAW,CAAC,MAAM,CAAC,mBAAmB,CAAC;IAC/D,YAAY,EAAE,GAAG,EAAE,CAAC,sBAAW,CAAC,MAAM,CAAC,gBAAgB,CAAC;IACxD,eAAe,EAAE,CAAC,OAKjB,EAAE,EAAE,CAAC,sBAAW,CAAC,MAAM,CAAC,kBAAkB,EAAE,OAAO,CAAC;CACtD,CAAC,CAAC","sources":["webpack://bfg-repo-cleaner-gui/external node-commonjs \"electron\"","webpack://bfg-repo-cleaner-gui/webpack/bootstrap","webpack://bfg-repo-cleaner-gui/./src/main/preload.ts"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { contextBridge, ipcRenderer } from 'electron';\n\n// Expose protected methods that allow the renderer process to use\n// the ipcRenderer without exposing the entire object\ncontextBridge.exposeInMainWorld('electronAPI', {\n  selectRepository: () => ipcRenderer.invoke('select-repository'),\n  selectBfgJar: () => ipcRenderer.invoke('select-bfg-jar'),\n  cleanRepository: (options: {\n    repoPath: string;\n    bfgPath: string;\n    textReplacements: string[];\n    fileSizes: string;\n  }) => ipcRenderer.invoke('clean-repository', options)\n});\n"],"names":[],"sourceRoot":""}